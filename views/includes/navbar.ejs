<!-- Modern Responsive Navigation Bar -->
<nav class="navbar navbar-expand-lg sticky-top">  <div class="container-fluid px-3">
    <!-- Brand Logo -->
    <a class="navbar-brand" href="/listings">
      <div class="brand-container">
        <i class="fa-regular fa-compass brand-icon"></i>
        <span class="brand-text">HomeShare</span>
      </div>
    </a>

    <!-- Mobile Toggle Button -->
    <button
      class="navbar-toggler"
      type="button"
      data-bs-toggle="collapse"
      data-bs-target="#navbarContent"
      aria-controls="navbarContent"
      aria-expanded="false"
      aria-label="Toggle navigation"
    >
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
    </button>

    <!-- Navigation Content -->
    <div class="collapse navbar-collapse" id="navbarContent">      <!-- Left Navigation -->
      <ul class="navbar-nav me-auto">
        <li class="nav-item">
          <a class="nav-link nav-btn btn-primary" href="/listings">
            <i class="fa-solid fa-earth-americas"></i>
            <span>Explore</span>
          </a>
        </li>
      </ul>

      <!-- Search Bar -->
      <div class="search-wrapper mx-auto">
        <form class="search-form" action="/listings" method="GET">
          <div class="search-container">
            <div class="search-icon-wrapper">
              <i class="fas fa-search"></i>
            </div>
            <input
              type="search"
              class="search-input"
              placeholder="Where are you going?"
              name="search"
              value="<%= typeof searchQuery !== 'undefined' ? searchQuery : '' %>"
              autocomplete="off"
            />
            <button type="submit" class="search-btn">
              <i class="fas fa-search"></i>
            </button>
          </div>
        </form>
      </div>      <!-- Right Navigation -->
      <ul class="navbar-nav ms-auto">
        <li class="nav-item">
          <% if (typeof currUser !== 'undefined' && currUser !== null) { %>
          <a class="nav-link nav-btn btn-secondary" href="/listings/new">
            <i class="fas fa-home"></i>
            <span>Host Your Home</span>
          </a>
          <% } else { %>          <a class="nav-link nav-btn btn-secondary host-link" href="/login" onclick="event.preventDefault(); showLoginMessage('Please login first to host your home. Once logged in, you will be able to create your listing.'); return false;" title="Login required to host" data-bs-toggle="tooltip" data-bs-placement="bottom">
            <i class="fas fa-home"></i>
            <span>Host Your Home</span>
          </a>
          <% } %>
        </li>
        
        <% if (typeof currUser === 'undefined' || currUser === null) { %>
          <li class="nav-item">
            <a class="nav-link nav-btn btn-outline" href="/signup">
              <i class="fas fa-user-plus"></i>
              <span>Sign Up</span>
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link nav-btn btn-accent" href="/login">
              <i class="fas fa-sign-in-alt"></i>
              <span>Log In</span>
            </a>
          </li>
        <% } else { %>
          <li class="nav-item">
            <a class="nav-link nav-btn btn-danger" href="/logout">
              <i class="fas fa-sign-out-alt"></i>
              <span>Log Out</span>
            </a>
          </li>
        <% } %>
      </ul>
    </div>
  </div>
</nav>

<style>
  /* =================
     NAVBAR BASE STYLES
     ================= */  .navbar {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    border-bottom: 1px solid rgba(0, 0, 0, 0.06);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    padding: 0.85rem 0;
    box-shadow: 0 2px 20px rgba(0, 0, 0, 0.08);
  }

  .navbar.scrolled {
    background: rgba(255, 255, 255, 0.98);
    padding: 0.65rem 0;
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.12);
  }

  /* =================
     BRAND SECTION
     ================= */  .brand-container {
    display: flex;
    align-items: center;
    gap: 0.625rem;
    padding-right: 0.5rem;
  }
  .brand-icon {
    font-size: 1.75rem;
    color: var(--primary-color);
    transition: all 0.3s ease;
  }

  .brand-text {
    font-size: 1.45rem;
    font-weight: 700;
    color: var(--text-color);
    transition: all 0.3s ease;
  }

  .navbar-brand:hover .brand-icon {
    transform: rotate(15deg) scale(1.1);
    color: var(--primary-hover);
  }

  .navbar-brand:hover .brand-text {
    color: var(--primary-color);
  }

  /* =================
     MOBILE TOGGLE
     ================= */  .navbar-toggler {
    border: none;
    padding: 0.5rem;
    width: 2.25rem;
    height: 2.25rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 0.225rem;
    border-radius: 0.5rem;
    transition: all 0.3s ease;
    margin-left: 0.25rem;
  }

  .navbar-toggler:focus {
    box-shadow: none;
  }
  .hamburger-line {
    width: 18px;
    height: 2px;
    background: var(--text-color);
    border-radius: 2px;
    transition: all 0.3s ease;
  }

  .navbar-toggler:hover .hamburger-line {
    background: var(--primary-color);
  }

  .navbar-toggler[aria-expanded="true"] .hamburger-line:nth-child(1) {
    transform: rotate(45deg) translate(6px, 6px);
  }

  .navbar-toggler[aria-expanded="true"] .hamburger-line:nth-child(2) {
    opacity: 0;
  }

  .navbar-toggler[aria-expanded="true"] .hamburger-line:nth-child(3) {
    transform: rotate(-45deg) translate(6px, -6px);
  }  /* =================
     PROFESSIONAL BUTTON SYSTEM
     ================= */  .navbar-nav {
    gap: 0.625rem;
  }

  .navbar-nav .nav-item {
    margin: 0 0.1875rem;
  }  /* Base Button Styles */  .nav-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.85rem 1.625rem;
    border-radius: 2rem;
    font-weight: 600;
    font-size: 0.875rem;
    line-height: 1.4;
    text-decoration: none;
    position: relative;
    white-space: nowrap;
    min-height: 46px;
    justify-content: center;
    transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
    border: 1.5px solid transparent;
    letter-spacing: 0.02em;
    overflow: hidden;
  }
  .nav-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.4s;
  }

  .nav-btn:hover::before {
    left: 100%;
  }

  .nav-btn i {
    font-size: 0.95rem;
    transition: all 0.25s ease;
    flex-shrink: 0;
  }

  /* Button Variants */
  /* Primary Button (Explore) */  .nav-btn.btn-primary {
    background: linear-gradient(135deg, var(--primary-color), #e73c7e);
    color: white !important;
    box-shadow: 0 3px 12px rgba(255, 56, 92, 0.25);
    border: 1.5px solid var(--primary-color);
    font-weight: 700;
    padding: 0.9rem 1.75rem;
  }

  .nav-btn.btn-primary:hover {
    background: linear-gradient(135deg, var(--primary-hover), var(--primary-color));
    color: white !important;
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(255, 56, 92, 0.4);
    border-color: var(--primary-hover);
  }

  /* Secondary Button (Host) */
  .nav-btn.btn-secondary {
    background: linear-gradient(135deg, #f8f9fa, #e9ecef);
    color: var(--text-color) !important;
    border: 1.5px solid #dee2e6;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  }

  .nav-btn.btn-secondary:hover {
    background: linear-gradient(135deg, #e9ecef, #dee2e6);
    color: var(--primary-color) !important;
    transform: translateY(-1px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12);
    border-color: var(--primary-color);
  }

  /* Outlined Button (Sign Up) */
  .nav-btn.btn-outline {
    background: transparent;
    color: var(--primary-color) !important;
    border: 1.5px solid var(--primary-color);
    box-shadow: 0 2px 8px rgba(255, 56, 92, 0.1);
  }

  .nav-btn.btn-outline:hover {
    background: var(--primary-color);
    color: white !important;
    transform: translateY(-1px);
    box-shadow: 0 4px 16px rgba(255, 56, 92, 0.25);
  }

  /* Accent Button (Login) */
  .nav-btn.btn-accent {
    background: linear-gradient(135deg, #28a745, #20c997);
    color: white !important;
    border: 1.5px solid #28a745;
    box-shadow: 0 4px 16px rgba(40, 167, 69, 0.25);
  }

  .nav-btn.btn-accent:hover {
    background: linear-gradient(135deg, #218838, #28a745);
    color: white !important;
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(40, 167, 69, 0.35);
    border-color: #218838;
  }

  /* Danger Button (Logout) */
  .nav-btn.btn-danger {
    background: linear-gradient(135deg, #dc3545, #c82333);
    color: white !important;
    border: 1.5px solid #dc3545;
    box-shadow: 0 4px 16px rgba(220, 53, 69, 0.25);
  }

  .nav-btn.btn-danger:hover {
    background: linear-gradient(135deg, #c82333, #bd2130);
    color: white !important;
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(220, 53, 69, 0.35);
    border-color: #c82333;
  }

  /* Button States */
  .nav-btn:active {
    transform: translateY(0);
    transition: transform 0.1s;
  }

  .nav-btn:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(255, 56, 92, 0.3);
  }

  .nav-btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }

  /* Icon Animations */
  .nav-btn:hover i {
    transform: scale(1.05);
  }
  .nav-btn.btn-primary:hover i,
  .nav-btn.btn-accent:hover i,
  .nav-btn.btn-danger:hover i {
    filter: brightness(1.1);
    transform: scale(1.05);
  }
  /* =================
     SEARCH BAR
     ================= */  .search-wrapper {
    max-width: 420px;
    width: 100%;
    margin: 0 1.25rem;
  }

  .search-container {
    display: flex;
    align-items: center;
    background: white;
    border: 1.5px solid rgba(0, 0, 0, 0.08);
    border-radius: 2rem;
    box-shadow: 0 3px 16px rgba(0, 0, 0, 0.06);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
    position: relative;
  }
  .search-container:hover {
    border-color: rgba(255, 56, 92, 0.3);
    box-shadow: 0 6px 30px var(--primary-light);
  }

  .search-container:focus-within {
    border-color: var(--primary-color);
    box-shadow: 0 8px 35px rgba(255, 56, 92, 0.2);
    transform: translateY(-1px);
  }
  .search-icon-wrapper {
    padding: 0 0.875rem;
    color: #717171;
    display: flex;
    align-items: center;
    transition: color 0.3s ease;
  }
  .search-container:focus-within .search-icon-wrapper {
    color: var(--primary-color);
  }

  .search-input {
    flex: 1;
    border: none;
    outline: none;
    padding: 0.875rem 0.375rem;
    font-size: 0.925rem;
    background: transparent;
    color: var(--text-color);
    font-weight: 500;
  }

  .search-input::placeholder {
    color: var(--text-muted);
    font-weight: 400;
    transition: color 0.3s ease;
  }

  .search-input:focus::placeholder {
    color: rgba(113, 113, 113, 0.7);
  }
  .search-btn {
    padding: 0.625rem;
    background: var(--primary-gradient);
    color: white;
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0.25rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
    box-shadow: 0 2px 8px var(--primary-light);
  }

  .search-btn:hover {
    background: linear-gradient(135deg, var(--primary-hover), #d70466);
    transform: scale(1.05);
    box-shadow: 0 4px 15px rgba(255, 56, 92, 0.4);
  }
  .search-btn:active {
    transform: scale(0.98);
  }
  /* =================
     RESPONSIVE DESIGN
     ================= */  @media (max-width: 991.98px) {
    .navbar-collapse {
      background: white;
      border-radius: 1rem;
      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
      margin-top: 0.75rem;
      padding: 1.25rem;
      border: 1px solid rgba(0, 0, 0, 0.06);
      max-height: calc(100vh - 5rem);
      overflow-y: auto;
    }

    .search-wrapper {
      max-width: 100%;
      margin: 0.875rem 0;
      order: 3;
    }

    .navbar-nav {
      gap: 0.625rem;
      width: 100%;
    }

    .navbar-nav .nav-item {
      margin: 0;
      width: 100%;
    }    .nav-btn {
      justify-content: center;
      padding: 0.85rem 1.5rem;
      width: 100%;
      border-radius: 0.75rem;
      font-size: 0.925rem;
    }

    .navbar-nav.me-auto {
      margin-bottom: 0.75rem !important;
    }

    .navbar-nav.ms-auto {
      margin-top: 0.75rem !important;
    }
  }
  @media (max-width: 767.98px) {
    .navbar {
      padding: 0.7rem 0;
    }

    .brand-text {
      font-size: 1.25rem;
    }

    .brand-icon {
      font-size: 1.5rem;
    }    .nav-btn {
      padding: 0.8rem 1.375rem;
      font-size: 0.875rem;
      min-height: 44px;
    }

    .nav-btn span {
      font-size: 0.875rem;
    }

    .search-input {
      font-size: 0.875rem;
      padding: 0.8rem 0.375rem;
    }

    .search-container {
      border-radius: 1.5rem;
    }

    .search-btn {
      width: 36px;
      height: 36px;
    }
  }
  @media (max-width: 575.98px) {
    .navbar {
      padding: 0.6rem 0;
    }

    .container-fluid {
      padding: 0 0.875rem;
    }

    .brand-text {
      display: none;
    }

    .brand-icon {
      font-size: 1.7rem;
    }    .nav-btn {
      padding: 0.75rem 1.125rem;
      font-size: 0.825rem;
      gap: 0.625rem;
      min-height: 42px;
    }

    .nav-btn i {
      font-size: 1rem;
    }

    .navbar-collapse {
      padding: 1rem;
      margin-top: 0.625rem;
    }

    .search-wrapper {
      margin: 0.625rem 0;
    }
  }  /* Extra small devices */
  @media (max-width: 374.98px) {
    .nav-btn span {
      font-size: 0.775rem;
    }
    
    .search-input {
      font-size: 0.825rem;
      padding: 0.75rem 0.3125rem;
    }
    
    .navbar-collapse {
      padding: 0.75rem;
      margin-top: 0.5rem;
    }

    .search-wrapper {
      margin: 0.5rem 0;
    }    .nav-btn {
      padding: 0.7rem 1rem;
      min-height: 40px;
    }

    .navbar-nav.me-auto {
      margin-bottom: 0.5rem !important;
    }

    .navbar-nav.ms-auto {
      margin-top: 0.5rem !important;
    }
  }
  /* =================
     ANIMATIONS
     ================= */  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-8px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .dropdown-menu {
    animation: slideDown 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Enhanced navbar collapse animation */
  .navbar-collapse {
    transition: transform 0.3s ease, opacity 0.3s ease !important;
  }
  
  .navbar-collapse.collapsing {
    transform: translateY(-10px);
    opacity: 0;
  }
  
  .navbar-collapse.show {
    transform: translateY(0);
    opacity: 1;
  }
  /* =================
     ACCESSIBILITY
     ================= */  
  

  .dropdown-item:focus {
    background: var(--primary-light);
    color: var(--primary-color);
    outline: none;
  }
</style>
</style>

<script>  // Function to show login message and redirect to login page  function showLoginMessage(message) {
    // Use the flash message system from Express
    // Store the message in session storage so it persists during the redirect
    sessionStorage.setItem('loginRedirectReason', message);
    // Redirect to login page
    window.location.href = "/login";
  }
  
  // Initialize tooltips when DOM is loaded
  document.addEventListener("DOMContentLoaded", function() {
    // Add tooltip to host links that require login
    const hostLinks = document.querySelectorAll('.host-link');
    hostLinks.forEach(link => {
      // Add a subtle visual indicator if not already present
      if (!link.querySelector('.fa-lock')) {
        const span = link.querySelector('span');
        if (span) {
          span.innerHTML = span.innerHTML + ' <i class="fas fa-lock fa-xs ms-1" style="opacity: 0.7;"></i>';
        }
      }
    });
    
    // Initialize tooltips if Bootstrap is available
    if (typeof bootstrap !== 'undefined' && bootstrap.Tooltip) {
      const tooltips = document.querySelectorAll('[data-bs-toggle="tooltip"]');
      tooltips.forEach(tooltip => new bootstrap.Tooltip(tooltip));
    }
  });
    // Initialize tooltips when DOM is loaded
  document.addEventListener("DOMContentLoaded", function() {
    // Add tooltip to host links that require login
    const hostLinks = document.querySelectorAll('.host-link');
    hostLinks.forEach(link => {
      // Add a subtle visual indicator if not already present
      if (!link.querySelector('.fa-lock')) {
        const span = link.querySelector('span');
        if (span) {
          span.innerHTML = span.innerHTML + ' <i class="fas fa-lock fa-xs ms-1" style="opacity: 0.7;"></i>';
        }
      }
    });
    
    // Initialize tooltips if Bootstrap is available
    if (typeof bootstrap !== 'undefined' && bootstrap.Tooltip) {
      const tooltips = document.querySelectorAll('[data-bs-toggle="tooltip"]');
      tooltips.forEach(tooltip => new bootstrap.Tooltip(tooltip));
    }
  });

  class NavbarController {
    constructor() {
      this.navbar = document.querySelector('.navbar');
      this.toggler = document.querySelector('.navbar-toggler');
      this.collapse = document.querySelector('#navbarContent');
      this.searchInput = document.querySelector('.search-input');
      
      this.init();
    }

    init() {
      this.setupScrollEffect();
      this.setupToggleAnimation();
      this.setupSearchFocus();
      this.setupDropdownAnimations();
      this.setupMobileNavigation();
    }    setupScrollEffect() {
      let ticking = false;
      let scrolled = false;
      const scrollThreshold = 35;
      
      const updateNavbar = () => {
        const currentScroll = window.pageYOffset;
        const shouldBeScrolled = currentScroll > scrollThreshold;
        
        // Only update DOM if state changes
        if (shouldBeScrolled !== scrolled) {
          scrolled = shouldBeScrolled;
          this.navbar.classList.toggle('scrolled', scrolled);
        }
        
        ticking = false;
      };

      window.addEventListener('scroll', () => {
        if (!ticking) {
          requestAnimationFrame(updateNavbar);
          ticking = true;
        }
      });
      
      // Initial check
      updateNavbar();
    }

    setupToggleAnimation() {
      if (!this.toggler || !this.collapse) return;

      this.toggler.addEventListener('click', () => {
        // Toggle animation happens via CSS
        const isExpanded = this.toggler.getAttribute('aria-expanded') === 'true';
        this.toggler.setAttribute('aria-expanded', !isExpanded);
      });

      // Close mobile menu when clicking outside
      document.addEventListener('click', (e) => {
        if (!this.navbar.contains(e.target) && this.collapse.classList.contains('show')) {
          const bsCollapse = new bootstrap.Collapse(this.collapse);
          bsCollapse.hide();
        }
      });
    }

    setupSearchFocus() {
      if (!this.searchInput) return;

      const searchContainer = this.searchInput.closest('.search-container');
      
      this.searchInput.addEventListener('focus', () => {
        searchContainer?.classList.add('focused');
      });

      this.searchInput.addEventListener('blur', () => {
        searchContainer?.classList.remove('focused');
      });

      // Enhanced search functionality
      this.searchInput.addEventListener('input', (e) => {
        const value = e.target.value.toLowerCase().trim();
        // Could add search suggestions here
      });
    }    setupDropdownAnimations() {
      const dropdowns = document.querySelectorAll('.dropdown');
      
      dropdowns.forEach(dropdown => {
        const toggle = dropdown.querySelector('.dropdown-toggle');
        const menu = dropdown.querySelector('.dropdown-menu');
        
        if (!toggle || !menu) return;

        dropdown.addEventListener('show.bs.dropdown', () => {
          menu.style.display = 'block';
          menu.style.opacity = '0';
          menu.style.transform = 'translateY(-8px)';
          
          requestAnimationFrame(() => {
            menu.style.transition = 'all 0.25s cubic-bezier(0.4, 0, 0.2, 1)';
            menu.style.opacity = '1';
            menu.style.transform = 'translateY(0)';
          });
        });

        dropdown.addEventListener('hide.bs.dropdown', () => {
          menu.style.transition = 'all 0.2s ease';
          menu.style.opacity = '0';
          menu.style.transform = 'translateY(-4px)';
          
          setTimeout(() => {
            menu.style.display = 'none';
          }, 180);
        });
      });
    }    setupMobileNavigation() {
      const navLinks = document.querySelectorAll('.nav-btn');
      
      navLinks.forEach(link => {
        link.addEventListener('click', (e) => {
          // Add ripple effect
          this.createRipple(e, link);
          
          // Close mobile menu after clicking a link
          if (window.innerWidth < 992 && this.collapse.classList.contains('show')) {
            setTimeout(() => {
              const bsCollapse = new bootstrap.Collapse(this.collapse);
              bsCollapse.hide();
            }, 120);
          }
        });
      });
    }createRipple(event, element) {
      const ripple = document.createElement('span');
      const rect = element.getBoundingClientRect();
      const size = Math.max(rect.width, rect.height);
      const x = event.clientX - rect.left - size / 2;
      const y = event.clientY - rect.top - size / 2;
      
      ripple.style.cssText = `
        position: absolute;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.6);
        transform: scale(0);
        animation: ripple 0.5s ease-out;
        width: ${size}px;
        height: ${size}px;
        left: ${x}px;
        top: ${y}px;
        pointer-events: none;
      `;
      
      element.style.position = 'relative';
      element.style.overflow = 'hidden';
      element.appendChild(ripple);
      
      setTimeout(() => {
        ripple.remove();
      }, 500);
    }
  }

  // Initialize when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    new NavbarController();
  });

  // Add ripple animation styles  const rippleStyles = document.createElement('style');
  rippleStyles.textContent = `
    @keyframes ripple {
      to {
        transform: scale(3.5);
        opacity: 0;
      }
    }
  `;
  document.head.appendChild(rippleStyles);
</script>
