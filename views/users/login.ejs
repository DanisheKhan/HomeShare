<% layout("layouts/boilerplate.ejs") %>

<section class="auth-section">
  <div class="container">
    <div class="row justify-content-center">
      <div class="col-lg-5 col-md-8 col-sm-10">
        <div class="auth-card animate__animated animate__fadeIn">
          <div class="auth-header text-center mb-4">
            <h2 class="auth-title">Welcome Back</h2>
            <p class="auth-subtitle">Sign in to continue to HomeShare</p>
          </div>

          <form
            action="/login"
            method="POST"
            class="auth-form needs-validation"
            novalidate
          >
            <div class="form-floating mb-3">
              <input
                name="username"
                type="text"
                class="form-control"
                id="username"
                placeholder="Username"
                required
              />
              <label for="username"
                ><i class="fa-solid fa-user me-2"></i>Username</label
              >
              <div class="invalid-feedback">Please enter your username</div>
            </div>

            <div class="form-floating mb-3">
              <input
                name="password"
                type="password"
                class="form-control"
                id="password"
                placeholder="Password"
                required
              />
              <label for="password"
                ><i class="fa-solid fa-lock me-2"></i>Password</label
              >
              <div class="invalid-feedback">Please enter your password</div>
              <div class="password-toggle">
                <i class="fa-solid fa-eye" id="togglePassword"></i>
              </div>
            </div>

            <div class="d-flex justify-content-between align-items-center mb-4">
              <div class="form-check">
                <input class="form-check-input" type="checkbox" id="remember" />
                <label class="form-check-label" for="remember"
                  >Remember me</label
                >
              </div>
              <a href="#" class="forgot-link">Forgot Password?</a>
            </div>

            <button class="btn btn-primary w-100 py-2" type="submit">
              <i class="fa-solid fa-right-to-bracket me-2"></i>Sign In
            </button>

            <div class="auth-divider">
              <span>OR</span>
            </div>

            <div class="social-login">
              <button
                type="button"
                class="btn btn-outline-secondary social-btn"
              >
                <i class="fab fa-google me-2"></i>Sign in with Google
              </button>
            </div>
          </form>

          <div class="auth-footer text-center mt-4">
            <p>
              Don't have an account?
              <a href="/signup" class="signup-link">Sign up</a>
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .auth-section {
    padding: 2rem 0;
  }

  .auth-card {
    background-color: white;
    padding: 2.5rem;
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-md);
  }

  .auth-title {
    font-weight: 700;
    color: var(--secondary-color);
    margin-bottom: 0.5rem;
  }

  .auth-subtitle {
    color: var(--text-muted);
    font-size: 0.95rem;
  }

  .auth-form .form-floating label {
    color: var(--text-muted);
  }

  .auth-form .form-control {
    border-radius: var(--radius-md);
    border: 1px solid var(--border-color);
    padding-left: 1rem;
  }

  .auth-form .form-control:focus {
    box-shadow: 0 0 0 4px rgba(247, 87, 92, 0.1);
    border-color: var(--primary-color);
  }

  .form-check-input:checked {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
  }

  .forgot-link {
    font-size: 0.9rem;
    color: var(--primary-color);
    text-decoration: none;
  }

  .forgot-link:hover {
    text-decoration: underline;
  }

  .password-toggle {
    position: absolute;
    right: 15px;
    top: 50%;
    transform: translateY(-50%);
    cursor: pointer;
    color: var(--text-muted);
  }

  .auth-divider {
    text-align: center;
    margin: 1.5rem 0;
    position: relative;
  }

  .auth-divider:before {
    content: "";
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    height: 1px;
    background-color: var(--border-color);
  }

  .auth-divider span {
    position: relative;
    background-color: white;
    padding: 0 1rem;
    font-size: 0.9rem;
    color: var(--text-muted);
  }

  .social-login {
    text-align: center;
  }

  .social-btn {
    width: 100%;
    border-radius: var(--radius-md);
    margin-bottom: 0.75rem;
    padding: 0.5rem;
  }

  .signup-link {
    color: var(--primary-color);
    font-weight: 600;
    text-decoration: none;
  }

  .signup-link:hover {
    text-decoration: underline;
  }

  @media (max-width: 576px) {
    .auth-card {
      padding: 1.5rem;
      margin: 0 1rem;
    }
  }
</style>

<script>
  // Toggle password visibility
  document
    .getElementById("togglePassword")
    ?.addEventListener("click", function () {
      const passwordInput = document.getElementById("password");
      const type =
        passwordInput.getAttribute("type") === "password" ? "text" : "password";
      passwordInput.setAttribute("type", type);
      this.classList.toggle("fa-eye");
      this.classList.toggle("fa-eye-slash");
    });
  // Form validation
  (function () {
    "use strict";
    const forms = document.querySelectorAll(".needs-validation");
    Array.from(forms).forEach((form) => {
      form.addEventListener(
        "submit",
        function (event) {
          if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
          }
          form.classList.add("was-validated");
        },
        false
      );
    }); // Check if there's a login redirect reason in session storage
    const loginRedirectReason = sessionStorage.getItem("loginRedirectReason");
    if (loginRedirectReason) {
      // Create enhanced flash message element
      const flashContainer = document.querySelector(".flash-container");
      if (flashContainer) {
        const alertDiv = document.createElement("div");
        alertDiv.className =
          "custom-alert info-alert alert-dismissible fade show animate__animated animate__fadeInDown animate__faster";
        alertDiv.role = "alert";
        alertDiv.innerHTML = `
          <div class="alert-content">
            <div class="alert-icon-wrapper">
              <i class="fas fa-info-circle alert-icon"></i>
            </div>
            <div class="alert-message">
              <strong>Action Required:</strong> ${loginRedirectReason}
            </div>
          </div>
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        `;
        flashContainer.appendChild(alertDiv);

        // Add special styling for the login message
        const style = document.createElement("style");
        style.textContent = `
          .info-alert {
            background-color: #e7f2fa;
            border-left: 4px solid #3498db;
            box-shadow: 0 4px 15px rgba(52, 152, 219, 0.15);
          }
          .info-alert .alert-icon-wrapper {
            background-color: #3498db;
          }
          .info-alert .alert-icon {
            color: white;
          }
          .info-alert .alert-message {
            color: #2c3e50;
          }
          .info-alert .alert-message strong {
            color: #3498db;
          }
        `;
        document.head.appendChild(style);

        // Auto dismiss after 7 seconds
        setTimeout(() => {
          alertDiv.classList.replace(
            "animate__fadeInDown",
            "animate__fadeOutUp"
          );
          setTimeout(() => {
            alertDiv.remove();
          }, 500);
        }, 7000);
      }

      // Remove the message from session storage so it doesn't show again on refresh
      sessionStorage.removeItem("loginRedirectReason");
    }
  })();
</script>
